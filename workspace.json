{
  "version": 2,
  "projects": {
    "benchmark-interceptor": {
      "root": "benchmarks/interceptor",
      "type": "library",
      "sourceRoot": "benchmarks/interceptor/src",
      "targets": {
        "bench": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "benchmarks/interceptor",
            "commands": [
              "../../node_modules/.bin/tsc -p tsconfig.build.json",
              "node -r module-alias/register dist/benchmarks/interceptor/src/main"
            ],
            "parallel": false
          }
        }
      },
      "implicitDependencies": []
    },
    "benchmark-logger": {
      "root": "benchmarks/logger",
      "sourceRoot": "benchmarks/logger/src",
      "type": "library",
      "targets": {
        "bench": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "benchmarks/logger",
            "commands": [
              "../../node_modules/.bin/tsc -p tsconfig.json",
              "node dist/benchmarks/logger/src/index"
            ],
            "parallel": false
          }
        }
      },
      "implicitDependencies": []
    },
    "cli": {
      "root": "packages/cli",
      "type": "library",
      "sourceRoot": "packages/cli/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/cli",
            "main": "packages/cli/src/main.ts",
            "tsConfig": "packages/cli/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/cli/package.json",
            "assets": ["packages/cli/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/cli/test",
            "coverage": true,
            "coverageConfig": "./packages/cli/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "common": {
      "root": "packages/common",
      "type": "library",
      "sourceRoot": "packages/common/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/common",
            "main": "packages/common/src/index.ts",
            "tsConfig": "packages/common/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/common/package.json",
            "assets": ["packages/common/*.md"]
          }
        }
      },
      "implicitDependencies": []
    },
    "docs": {
      "projectType": "application",
      "root": "apps/docs",
      "sourceRoot": "apps/docs/src",
      "targets": {
        "build": {
          "executor": "@nx-plus/docusaurus:browser",
          "options": {
            "outputPath": "dist/apps/docs"
          }
        },
        "serve": {
          "executor": "@nx-plus/docusaurus:dev-server",
          "options": {
            "port": 3000
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "command": "pnpm docusaurus deploy --out-dir dist/apps/docs --config apps/docs/docusaurus.config.js --skip-build"
          }
        }
      },
      "tags": []
    },
    "integration": {
      "root": "integration",
      "type": "library",
      "sourceRoot": "integration/src",
      "targets": {
        "e2e": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "integration/jest.config.js"
          }
        }
      },
      "implicitDependencies": []
    },
    "logger": {
      "root": "packages/logger",
      "type": "library",
      "sourceRoot": "packages/logger/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/logger",
            "main": "packages/logger/src/index.ts",
            "tsConfig": "packages/logger/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/logger/package.json",
            "assets": ["packages/logger/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/logger/test",
            "coverage": true,
            "coverageConfig": "./packages/logger/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "nestjs-module": {
      "root": "packages/nestjs-module",
      "type": "library",
      "sourceRoot": "packages/nestjs-module/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/nestjs-module",
            "main": "packages/nestjs-module/src/index.ts",
            "tsConfig": "packages/nestjs-module/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/nestjs-module/package.json",
            "assets": ["packages/nestjs-module/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/nestjs-module/test",
            "coverage": true,
            "coverageConfig": "./packages/nestjs-module/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-express": {
      "root": "packages/platform-express",
      "type": "library",
      "sourceRoot": "packages/platform-express/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-express",
            "main": "packages/platform-express/src/index.ts",
            "tsConfig": "packages/platform-express/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-express/package.json",
            "assets": ["packages/platform-express/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-express/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-express/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-fastify": {
      "root": "packages/platform-fastify",
      "type": "library",
      "sourceRoot": "packages/platform-fastify/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-fastify",
            "main": "packages/platform-fastify/src/index.ts",
            "tsConfig": "packages/platform-fastify/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-fastify/package.json",
            "assets": ["packages/platform-fastify/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-fastify/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-fastify/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-graphql": {
      "root": "packages/platform-graphql",
      "type": "library",
      "sourceRoot": "packages/platform-graphql/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-graphql",
            "main": "packages/platform-graphql/src/index.ts",
            "tsConfig": "packages/platform-graphql/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-graphql/package.json",
            "assets": ["packages/platform-graphql/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-graphql/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-graphql/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-graphql-fastify": {
      "root": "packages/platform-graphql-fastify",
      "type": "library",
      "sourceRoot": "packages/platform-graphql-fastify/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-graphql-fastify",
            "main": "packages/platform-graphql-fastify/src/index.ts",
            "tsConfig": "packages/platform-graphql-fastify/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-graphql-fastify/package.json",
            "assets": ["packages/platform-graphql-fastify/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-graphql-fastify/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-graphql-fastify/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-grpc": {
      "root": "packages/platform-grpc",
      "type": "library",
      "sourceRoot": "packages/platform-grpc/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-grpc",
            "main": "packages/platform-grpc/src/index.ts",
            "tsConfig": "packages/platform-grpc/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-grpc/package.json",
            "assets": ["packages/platform-grpc/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-grpc/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-grpc/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-kafka": {
      "root": "packages/platform-kafka",
      "type": "library",
      "sourceRoot": "packages/platform-kafka/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-kafka",
            "main": "packages/platform-kafka/src/index.ts",
            "tsConfig": "packages/platform-kafka/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-kafka/package.json",
            "assets": ["packages/platform-kafka/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-kafka/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-kafka/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-mqtt": {
      "root": "packages/platform-mqtt",
      "type": "library",
      "sourceRoot": "packages/platform-mqtt/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-mqtt",
            "main": "packages/platform-mqtt/src/index.ts",
            "tsConfig": "packages/platform-mqtt/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-mqtt/package.json",
            "assets": ["packages/platform-mqtt/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-mqtt/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-mqtt/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-nats": {
      "root": "packages/platform-nats",
      "type": "library",
      "sourceRoot": "packages/platform-nats/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-nats",
            "main": "packages/platform-nats/src/index.ts",
            "tsConfig": "packages/platform-nats/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-nats/package.json",
            "assets": ["packages/platform-nats/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-nats/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-nats/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-rabbitmq": {
      "root": "packages/platform-rabbitmq",
      "type": "library",
      "sourceRoot": "packages/platform-rabbitmq/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-rabbitmq",
            "main": "packages/platform-rabbitmq/src/index.ts",
            "tsConfig": "packages/platform-rabbitmq/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-rabbitmq/package.json",
            "assets": ["packages/platform-rabbitmq/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-rabbitmq/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-rabbitmq/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-redis": {
      "root": "packages/platform-redis",
      "type": "library",
      "sourceRoot": "packages/platform-redis/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-redis",
            "main": "packages/platform-redis/src/index.ts",
            "tsConfig": "packages/platform-redis/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-redis/package.json",
            "assets": ["packages/platform-redis/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-rabbitmq/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-rabbitmq/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-socket.io": {
      "root": "packages/platform-socket.io",
      "type": "library",
      "sourceRoot": "packages/platform-socket.io/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-socket.io",
            "main": "packages/platform-socket.io/src/index.ts",
            "tsConfig": "packages/platform-socket.io/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-socket.io/package.json",
            "assets": ["packages/platform-socket.io/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-socket.io/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-socket.io/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-tcp": {
      "root": "packages/platform-tcp",
      "type": "library",
      "sourceRoot": "packages/platform-tcp/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-tcp",
            "main": "packages/platform-tcp/src/index.ts",
            "tsConfig": "packages/platform-tcp/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-tcp/package.json",
            "assets": ["packages/platform-tcp/*.md"]
          }
        },
        "test": {
          "executor": "./tools/executors/uvu:uvu",
          "options": {
            "rootDir": "./packages/platform-rabbitmq/test",
            "coverage": true,
            "coverageConfig": "./packages/platform-rabbitmq/.c8rc",
            "useSwc": true
          }
        }
      },
      "implicitDependencies": []
    },
    "platform-ws": {
      "root": "packages/platform-ws",
      "type": "library",
      "sourceRoot": "packages/platform-ws/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/platform-ws",
            "main": "packages/platform-ws/src/index.ts",
            "tsConfig": "packages/platform-ws/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/platform-ws/package.json",
            "assets": ["packages/platform-ws/*.md"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/platform-ws/jest.config.js",
            "codeCoverage": true
          }
        }
      },
      "implicitDependencies": []
    },
    "styler": {
      "root": "packages/styler",
      "type": "library",
      "sourceRoot": "packages/styler/src",
      "targets": {
        "build": {
          "executor": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/styler",
            "main": "packages/styler/src/index.ts",
            "tsConfig": "packages/styler/tsconfig.build.json",
            "deleteOutputPath": true,
            "packageJson": "packages/styler/package.json",
            "assets": ["packages/styler/*.md"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "packages/styler/jest.config.js",
            "codeCoverage": true
          }
        }
      },
      "implicitDependencies": []
    },
    "tools": {
      "root": "tools",
      "type": "library",
      "sourceRoot": "tools",
      "targets": {
        "build": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "./tools/",
            "command": "../node_modules/.bin/tsc"
          }
        },
        "collect": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "node ./tools/coverage-merge",
              "./node_modules/.bin/nyc merge coverage-tmp coverage/coverage-final.json && ./node_modules/.bin/nyc report -t coverage --report-dir coverage --reporter=lcov"
            ],
            "parallel": false
          },
          "dependsOn": [
            {
              "target": "build",
              "projects": "self"
            },
            {
              "target": "test",
              "projects": "dependencies"
            }
          ]
        },
        "setup": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "command": "node .//tools/setup-workspace"
          },
          "dependsOn": [
            {
              "target": "build",
              "projects": "self"
            }
          ]
        }
      },
      "implicitDependencies": []
    }
  }
}
